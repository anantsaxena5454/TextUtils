{"version":3,"sources":["components/Navbar.js","components/textbox.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","Mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Home","abouttext","placeholder","search","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","console","log","target","style","backgroundColor","color","rows","newtext","toUpperCase","showalert","newstring","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","length","totalcharacter","split","Notification","alert","msg","data-bs-dismiss","defaultProps","App","setMode","_useState3","_useState4","setalert","message","setTimeout","body","Textbox","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3c73e152.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.Home}</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.abouttext}</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">{props.search}</button>\r\n          </form>\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className={`form-check-label text-${(props.Mode==='light')?'dark':'light'}`} onClick={props.toggleMode}  htmlFor=\"flexSwitchCheckDefault\">{(props.Mode==='light'?'Enable darkmode':'DIsable Darkmode')}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = { title: PropTypes.string.isRequired, abouttext: PropTypes.string.isRequired }\r\n\r\nNavbar.defaultProps = { title: \"Textuitils\", abouttext: \"About_TextUtils\", Home: \"Home\", search: \"Search\" }\r\n","import React, { useState } from 'react'\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState('Enter Text please');\r\n    const handleupclick = () => {\r\n        console.log(\"Upper Click was initiated \");\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n\r\n        props.showalert(\"CAPATALIZED\",\"success\");\r\n    }\r\n    const handleupClick = () => {\r\n        let newstring = text.toLowerCase();\r\n        setText(newstring);\r\n        props.showalert(\"lowercased\",\"success\");\r\n    }\r\n    // eslint-disable-next-line no-unused-vars\r\n    const handleOnChange = (event) => {\r\n        console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const totalcharacter=(text)=>{\r\n        if(text===\"\")\r\n        {\r\n            return 0;\r\n        }\r\n        else  \r\n        {\r\n            return text.length;\r\n        }\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showalert(\"copied to clipboard\",\"success\");\r\n    }\r\n    const cleareverything = () => {\r\n        let newstring = \"\";\r\n        setText(newstring);\r\n        props.showalert(\"ALL CLEAR\",\"success\");\r\n    }\r\n    return (\r\n        <>\r\n            <div className={\"container\"}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.Mode === 'dark' ? '#2d3a4a' : 'white', color: props.Mode === 'dark' ? 'white' : 'black' }} id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className='btn btn-success mx-2' onClick={handleupclick}>UPPERCASE</button>\r\n                <button className='btn btn-primary mx-2' onClick={handleupClick}>lowercase</button>\r\n                <button className='btn btn-warning mx-2' onClick={handleCopy}>Copy</button>\r\n                <button className='btn btn-danger mx-2' onClick={cleareverything}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-4\">\r\n                <h3>The summmary of the give text is </h3>\r\n                <ul>\r\n                    <li>total no of characters are {totalcharacter(text)}</li>\r\n                    <li>total no of words are {text.split(\" \").length}</li>\r\n                    <li>Time to read is {0.008 * text.split(\" \").length} minutes</li>\r\n                </ul>\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nexport default function Notification(props) {\r\n  return (\r\nprops.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/textbox';\nimport Notification from './components/Notification';\n// import About from './components/About'\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (Mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#041538';\n      document.body.style.color = 'white';\n      showalert('Darkmode Enabled', 'success');\n      document.title = 'Dark Mode - TextUtils'\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showalert('Darkmode Disabled', 'success');\n      document.title = 'Light Mode - TextUtils'\n    }\n  };\n  return (\n    <>\n      <Navbar title=\"Textuitils\" abouttext=\"About_TextUtils\" Home=\"Home\" search=\"Search\" Mode={Mode} toggleMode={toggleMode} />\n      <Notification alert={alert} />\n      <div className=\"container my-3\">\n        {/* <About /> */}\n        <Textbox heading=\"Enter the text to analyze\" showalert={showalert} Mode={Mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}